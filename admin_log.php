<?php
/**
 * Created by PhpStorm.
 * User: maruf
 * Date: 3/12/19
 * Time: 7:48 PM
 */

include_once 'config.php';
include_once 'EmailUtils.php';

class AdminLogUtils
{
    public static function log($admin, $action, $username, $room, $description)
    {
        $pdo = ApiHelper::getInstance();
        $sql = "INSERT INTO admin_log(admin, action, username, room, description) VALUES('$admin', '$action', '$username', '$room', '$description')";
        $pdo->exec($sql);
        $pdo = null;
        $staffs = ["anyelir", "rex", "pronoy", "dynamo"];
        foreach ($staffs as $staff) {
            $body = "Hi $staff\n\n$description\n\n\n(This is an autogenerated email. You do not need to reply anything.)";
            EmailUtils::sendInformationEmail($staff, "Admin action: $action", $body);
        }
    }

    public static function logSetLevel($admin, $room, $minLevel)
    {
        self::log($admin, "set level", "", $room, "$admin has set $minLevel as minimum level in $room chat room.");
    }

    public static function logKick($admin, $username, $room)
    {
        self::log($admin, "kick", $username, $room, "$admin has kicked $username in $room chat room.");
    }

    public static function logBump($admin, $username, $room)
    {
        self::log($admin, "bump", $username, $room, "$admin has bumped $username in $room chat room.");
    }

    public static function logClearKick($admin, $username, $room)
    {
        self::log($admin, "clear kick", $username, $room, "$admin has cleared kick of $username in $room chat room.");
    }

    public static function logBan($admin, $username, $room, $reason)
    {
        self::log($admin, "ban", $username, $room, "$admin has banned $username in $room chat room. Reason: $reason.");
    }

    public static function logUnban($admin, $username, $room, $reason)
    {
        self::log($admin, "unban", $username, $room, "$admin has unbanned $username in $room chat room. Reason: $reason.");
    }

    public static function logSuspend($admin, $username)
    {
        self::log($admin, "suspend", $username, "", "$admin has suspended $username.");
    }

    public static function logActivate($admin, $username)
    {
        self::log($admin, "activate", $username, "", "$admin has activated $username.");
    }

    public static function logMod($admin, $username, $room)
    {
        self::log($admin, "promote", $username, $room, "$admin has promoted $username in $room chat room.");
    }

    public static function logDemod($admin, $username, $room)
    {
        self::log($admin, "demote", $username, $room, "$admin has demoted $username in $room chat room.");
    }

    public static function logToggleImageShare($admin, $room, $enabled)
    {
        $enabled_text = "disabled image sharing";
        if ($enabled == 1) {
            $enabled_text = "enabled image sharing";
        }
        self::log($admin, "set image share = " . $enabled, "", $room, "$admin has $enabled_text in $room chat room.");
    }

    public static function logBlockShare($admin, $username)
    {
        self::log($admin, "block share", $username, "", "$admin has blocked $username from sharing images.");
    }

    public static function logResetPin($admin, $username)
    {
        self::log($admin, "reset pin", $username, "", "$admin reset pin of $username");
    }

    public static function logResetSQ($admin, $username)
    {
        self::log($admin, "reset sq", $username, "", "$admin reset sq of $username");
    }

    public static function logChangeGender($admin, $username)
    {
        self::log($admin, "change gender", $username, "", "$admin changed the gender of $username");
    }

    public static function logChangeEmail($admin, $username, $email)
    {
        self::log($admin, "change email", $username, "", "$admin changed the email of $username to $email");
    }

    public static function logRefundCredit($admin, $username, $amount)
    {
        self::log($admin, "refund credit", $username, "", "$admin refunded $amount credits for $username");
    }
}
